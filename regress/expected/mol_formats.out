SELECT mol_to_smiles(mol_from_smiles('C1OCCCC1'));
 mol_to_smiles 
---------------
 C1CCOCC1
(1 row)

SELECT mol_to_smiles(mol_from_smiles('OC=CC'));
 mol_to_smiles 
---------------
 CC=CO
(1 row)

SELECT mol_to_smiles(mol_from_smiles('OC=CC'), canonical => false);
 mol_to_smiles 
---------------
 OC=CC
(1 row)

SELECT mol_to_smiles(mol_from_smiles('F[C@](Cl)(Br)I'));
 mol_to_smiles  
----------------
 F[C@](Cl)(Br)I
(1 row)

SELECT mol_to_smiles(mol_from_smiles('F[C@](Cl)(Br)I'), isomeric => false);
 mol_to_smiles 
---------------
 FC(Cl)(Br)I
(1 row)

SELECT mol_to_smiles(mol_from_smiles('F[C@](Cl)(Br)I'), all_bonds_explicit => true);
   mol_to_smiles    
--------------------
 F-[C@](-Cl)(-Br)-I
(1 row)

SELECT mol_to_molblock(mol_from_smiles(''));
             mol_to_molblock             
-----------------------------------------
                                        +
      RDKit          2D                 +
                                        +
   0  0  0  0  0  0  0  0  0  0999 V3000+
 M  V30 BEGIN CTAB                      +
 M  V30 COUNTS 0 0 0 0 0                +
 M  V30 BEGIN ATOM                      +
 M  V30 END ATOM                        +
 M  V30 END CTAB                        +
 M  END                                 +
 
(1 row)

SELECT mol_to_smiles(mol_from_molblock(
    (Chr(10) || Chr(10) || Chr(10) ||
    '  0  0  0  0  0  0  0  0  0  0999 V2000' || Chr(10) ||
    'M  END')::cstring
    ));
 mol_to_smiles 
---------------
 
(1 row)

